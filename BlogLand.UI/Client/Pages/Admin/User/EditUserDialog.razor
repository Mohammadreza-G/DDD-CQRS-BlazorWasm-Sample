@inject HttpClient Http
@inject ISnackbar Snackbar

@if (EditUser != null && EditUser.Value != null)
{
    <MudDialog>
        <TitleContent>
            <MudText Typo="Typo.h6">
                <MudIcon Icon="@Icons.Material.Filled.Edit" Class="mr-3 mb-n1" />
                Edit User
            </MudText>
        </TitleContent>
        <DialogContent>
            <MudGrid>
                @if (Result != null && Result.IsFailed)
                {
                    @foreach (var error in Result.Errors)
                    {
                        <MudItem md="12">
                            <MudText Color="Color.Error" dir="rtl">@error</MudText>
                        </MudItem>
                    }
                }
                <MudItem md="6">
                    <MudTextField @bind-Value="EditUser.Value.FullName" Label="Full name" />
                </MudItem>
                <MudItem md="6">
                    <MudTextField @bind-Value="EditUser.Value.UserName" Label="User name" />
                </MudItem>
                <MudItem md="6">
                    <MudTextField @bind-Value="EditUser.Value.Email" Label="Email" />
                </MudItem>
                <MudItem md="6">
                    <MudTextField @bind-Value="EditUser.Value.PhoneNumber" Label="Phone number" />
                </MudItem>
            </MudGrid>
        </DialogContent>
        <DialogActions>
            <MudButton OnClick="Cancel">Cancel</MudButton>
            <MudButton Color="Color.Error" OnClick="Submit">Edit</MudButton>
        </DialogActions>
    </MudDialog>
}
else
{
    <MudProgressCircular Color="Color.Primary" Indeterminate="true" />
}

@code {
    [CascadingParameter] MudDialogInstance MudDialog { get; set; }
    [Parameter] public long Id { get; set; }
    public Result<EditUser> EditUser = new Result<EditUser>();
    public Dtat.Result.Result? Result = new Result();

    protected override async Task OnInitializedAsync()
    {
        var requestUri = $"userApi/Users/GetDetails/{Id}";
        EditUser = await Http.GetFromJsonAsync<Result<EditUser>>(requestUri);
    }

    public async Task Edit()
    {
        var requestUri = "userApi/Users/Edit";

        var response = await Http.PutAsJsonAsync(requestUri, EditUser.Value);
        var json = await response.Content.ReadAsStringAsync();
        Result = JsonConvert.DeserializeObject<Result>(json);
    }
    public async Task Submit()
    {
        await Edit();
        if (Result != null && Result.IsSuccess)
        {
            Snackbar.Add("User Edited", Severity.Success);
            MudDialog.Close();
        }
    }

    private void Cancel()
    {
        MudDialog.Cancel();
    }

}